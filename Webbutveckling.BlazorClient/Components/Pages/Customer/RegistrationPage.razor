@page "/RegistrationPage"
@using webbutveckling_labb2_Bjornanger.Shared.Interfaces
@using webbutveckling_labb2_Bjornanger.Shared.DTOs.UserDTOs
@inject ICustomerService<CustomerDTO> customerService
@inject IJSRuntime JSRuntime


@rendermode InteractiveServer

<div class="container">
    <div class="row">
        <h3>Registration</h3>
        <p>
            Welcome! Please fill in all the fields below to create a new user account.
        </p>
    </div>
</div>



<div class="container">
    <div class="row">
        <EditForm Model="newCustomerToAdd" FormName="CreateCustomer" OnValidSubmit="CreateNewCustomer">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div>
                <label>First Name</label>
                <InputText id="firstName" class="form-control" @bind-Value="newCustomerToAdd.FirstName" placeholder="Enter Firstname"></InputText>
            </div>
            <div>
                <label>Last Name</label>
                <InputText id="lastName" class="form-control" @bind-Value="newCustomerToAdd.LastName" placeholder="Enter Lastname"></InputText>
            </div>
            <div>
                <label>Email</label>
                <InputText id="email" class="form-control" @bind-Value="newCustomerToAdd.Email" placeholder="Enter Email"></InputText>
            </div>
            <div>
                <label>Password</label>
                <InputText id="password" class="form-control" @bind-Value="newCustomerToAdd.Password" placeholder="Enter Password"></InputText>
            </div>
            <div>
                <label>Phone Number</label>
                <InputText id="phoneNumber" class="form-control" @bind-Value="newCustomerToAdd.ContactInfo.Phone" placeholder="Enter Phone Number"></InputText>
            </div>
            <div>
                <label>Address</label>
                <InputText id="address" class="form-control" @bind-Value="newCustomerToAdd.ContactInfo.Address" placeholder="Enter Address"></InputText>
            </div>
            <div>
                <label>Zip Code</label>
                <InputText id="zipCode" class="form-control" @bind-Value="newCustomerToAdd.ContactInfo.ZipCode" placeholder="Enter Zip Code"></InputText>
            </div>
            <div>
                <label>City</label>
                <InputText id="city" class="form-control" @bind-Value="newCustomerToAdd.ContactInfo.City" placeholder="Enter City"></InputText>
            </div>
            <div>
                <label>Region</label>
                <InputText id="Region" class="form-control" @bind-Value="newCustomerToAdd.ContactInfo.Region" placeholder="Enter Region"></InputText>
            </div>
            <div>
                <label>Country</label>
                <InputText id="country" class="form-control" @bind-Value="newCustomerToAdd.ContactInfo.Country" placeholder="Enter Country"></InputText>
            </div>
            <button type="submit" color="primary">Create</button>
        </EditForm>
    </div>
</div>









@code {


    private CustomerDTO newCustomerToAdd { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {

    }


    private async void CreateNewCustomer()
    {

        var customerFaL = newCustomerToAdd;

        if (customerFaL is null)
        {
            return;
        }

        var createNewCustomer = new CustomerDTO
            {

                FirstName = customerFaL.FirstName,
                LastName = customerFaL.LastName,
                Email = customerFaL.Email,
                Password = customerFaL.Password,

                ContactInfo = new ContactInfoDTO
                {
                    Phone = customerFaL.ContactInfo.Phone,
                    Address = customerFaL.ContactInfo.Address,
                    ZipCode = customerFaL.ContactInfo.ZipCode,
                    City = customerFaL.ContactInfo.City,
                    Region = customerFaL.ContactInfo.Region,
                    Country = customerFaL.ContactInfo.Country
                }
            };

        await customerService.AddAsync(createNewCustomer);
        await ShowMessage("Profile Created Successfully!");
        newCustomerToAdd = new CustomerDTO();

    }
    private async Task ShowMessage(string message)
    {
        await JSRuntime.InvokeVoidAsync("alert", message);
    }

} 